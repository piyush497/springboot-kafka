# Default values for courier-microservices
# This is a YAML-formatted file.

global:
  imageRegistry: "courierregistry.azurecr.io"
  imagePullPolicy: Always
  storageClass: "default"
  
# Environment configuration
environment: development
namespace: courier-system

# Image pull secrets for private registries
imagePullSecrets:
  - name: acr-secret

# Main Service Configuration
mainService:
  enabled: true
  name: courier-main-service
  image:
    repository: courier-main-service
    tag: latest
  replicaCount: 3
  port: 8080
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  env:
    SPRING_PROFILES_ACTIVE: "production"
    LOG_LEVEL: "INFO"
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: api.courier.company.com
        paths:
          - path: /api/v1
            pathType: Prefix
    tls:
      - secretName: courier-api-tls
        hosts:
          - api.courier.company.com
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Customer Interface Service Configuration
customerInterface:
  enabled: true
  name: courier-customer-interface
  image:
    repository: courier-customer-interface
    tag: latest
  replicaCount: 3
  port: 8081
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  env:
    SPRING_PROFILES_ACTIVE: "production"
    LOG_LEVEL: "INFO"
    MAX_PARCELS_PER_DAY: "100"
    RATE_LIMIT: "60"
  service:
    type: ClusterIP
    port: 8081
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: customer.courier.company.com
        paths:
          - path: /api/v1/customer
            pathType: Prefix
    tls:
      - secretName: courier-customer-tls
        hosts:
          - customer.courier.company.com
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Frontend Service Configuration
frontend:
  enabled: true
  name: courier-frontend
  image:
    repository: courier-frontend
    tag: latest
  replicaCount: 3
  port: 3000
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  env:
    REACT_APP_ENVIRONMENT: "production"
    REACT_APP_VERSION: "1.0.0"
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: app.courier.company.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: courier-app-tls
        hosts:
          - app.courier.company.com
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

# Database Configuration
database:
  host: "courier-postgresql"
  port: 5432
  name: "courier_db"
  username: "courier_user"
  # Password should be set via secret
  existingSecret: "courier-database-secret"
  secretKeys:
    password: "password"

# Kafka Configuration
messaging:
  kafka:
    enabled: true
    host: "courier-kafka"
    port: 9092
    topics:
      - name: "incoming-parcel-orders"
        partitions: 3
        replicationFactor: 1
      - name: "abc-transport-events"
        partitions: 3
        replicationFactor: 1
      - name: "abc-transport-responses"
        partitions: 3
        replicationFactor: 1
      - name: "parcel-tracking-events"
        partitions: 3
        replicationFactor: 1
      - name: "customer-parcel-submissions"
        partitions: 3
        replicationFactor: 1
      - name: "parcel-status-updates"
        partitions: 3
        replicationFactor: 1
      - name: "customer-notifications"
        partitions: 3
        replicationFactor: 1

# Redis Configuration
cache:
  redis:
    enabled: true
    host: "courier-redis-master"
    port: 6379
    existingSecret: "courier-redis-secret"
    secretKeys:
      password: "password"

# Security Configuration
security:
  jwt:
    existingSecret: "courier-jwt-secret"
    secretKeys:
      mainService: "main-service-secret"
      customerInterface: "customer-interface-secret"

# Monitoring Configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
  grafana:
    enabled: true
    dashboards:
      enabled: true

# Network Policies
networkPolicy:
  enabled: true
  ingress:
    enabled: true
  egress:
    enabled: true

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC
rbac:
  create: true

# External Dependencies (can be disabled if using external services)
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "courier_user"
    password: "courier_pass"
    database: "courier_db"
  primary:
    persistence:
      enabled: true
      size: 10Gi

kafka:
  enabled: true
  replicaCount: 1
  auth:
    clientProtocol: plaintext
  zookeeper:
    enabled: true
  persistence:
    enabled: true
    size: 8Gi

redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
