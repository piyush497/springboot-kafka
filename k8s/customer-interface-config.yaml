apiVersion: v1
kind: ConfigMap
metadata:
  name: courier-customer-interface-config
  namespace: courier-system
  labels:
    app: courier-customer-interface
    component: configuration
data:
  application.yml: |
    spring:
      profiles:
        active: customer-interface
      application:
        name: courier-customer-interface
      
      jpa:
        hibernate:
          ddl-auto: validate
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            jdbc:
              batch_size: 25
            order_inserts: true
            order_updates: true
      
      kafka:
        consumer:
          group-id: customer-interface-group
          auto-offset-reset: earliest
          properties:
            spring.json.trusted.packages: "com.courier.dto,com.courier.event"
        producer:
          properties:
            spring.json.add.type.headers: false
            retries: 3
            acks: all
            enable.idempotence: true
      
      cloud:
        stream:
          kafka:
            binder:
              auto-create-topics: true
              auto-add-partitions: true
          bindings:
            customerParcels-out-0:
              destination: customer-parcel-submissions
              content-type: application/json
              producer:
                partition-key-expression: headers['customerId']
            parcelStatusUpdates-in-0:
              destination: parcel-status-updates
              content-type: application/json
              group: customer-interface-status-group
    
    server:
      servlet:
        context-path: /api/v1/customer
      compression:
        enabled: true
        mime-types: application/json,application/xml,text/html,text/xml,text/plain
      http2:
        enabled: true
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus,readiness,liveness
          base-path: /actuator
      endpoint:
        health:
          show-details: always
          probes:
            enabled: true
        readiness:
          enabled: true
        liveness:
          enabled: true
      health:
        readinessstate:
          enabled: true
        livenessstate:
          enabled: true
      metrics:
        export:
          prometheus:
            enabled: true
        tags:
          application: courier-customer-interface
    
    logging:
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
      file:
        name: /var/log/courier/customer-interface.log
    
    customer-interface:
      features:
        parcel-registration: true
        parcel-tracking: true
        notifications: true
        file-upload: true
      notification:
        email:
          enabled: true
        sms:
          enabled: false
    
    resilience4j:
      circuitbreaker:
        instances:
          main-courier-service:
            register-health-indicator: true
            sliding-window-size: 10
            minimum-number-of-calls: 5
            permitted-number-of-calls-in-half-open-state: 3
            wait-duration-in-open-state: 10s
            failure-rate-threshold: 50
            slow-call-rate-threshold: 50
            slow-call-duration-threshold: 2s
      retry:
        instances:
          main-courier-service:
            max-attempts: 3
            wait-duration: 1s
            exponential-backoff-multiplier: 2

  kafka-topics.yml: |
    kafka:
      topics:
        customer-submissions: "customer-parcel-submissions"
        status-updates: "parcel-status-updates"
        customer-notifications: "customer-notifications"

---
apiVersion: v1
kind: Secret
metadata:
  name: courier-customer-interface-secret
  namespace: courier-system
  labels:
    app: courier-customer-interface
    component: secrets
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets
  jwt-secret: Y291cmllckN1c3RvbWVySW50ZXJmYWNlU2VjcmV0S2V5MjAyNCFAIyQlXiYqKCk=
  database-password: Y291cmllcl9wYXNz
  email-api-key: ""
  sms-api-key: ""

---
apiVersion: v1
kind: Secret
metadata:
  name: courier-database-secret
  namespace: courier-system
  labels:
    app: courier-system
    component: database
type: Opaque
data:
  # Base64 encoded database connection details
  url: amRiYzpwb3N0Z3Jlc3FsOi8vY291cmllci1wb3N0Z3Jlcy1zZXJ2aWNlOjU0MzIvY291cmllcl9kYg==
  username: Y291cmllcl91c2Vy
  password: Y291cmllcl9wYXNz

---
apiVersion: v1
kind: Secret
metadata:
  name: courier-jwt-secret
  namespace: courier-system
  labels:
    app: courier-system
    component: security
type: Opaque
data:
  # Base64 encoded JWT secrets for different services
  customer-interface-secret: Y291cmllckN1c3RvbWVySW50ZXJmYWNlU2VjcmV0S2V5MjAyNCFAIyQlXiYqKCk=
  main-service-secret: Y291cmllck1haW5TZXJ2aWNlU2VjcmV0S2V5MjAyNCFAIyQlXiYqKCk=

---
apiVersion: v1
kind: Secret
metadata:
  name: courier-eventhub-secret
  namespace: courier-system
  labels:
    app: courier-system
    component: messaging
type: Opaque
data:
  # Base64 encoded Azure Event Hub connection details (optional for production)
  connection-string: ""
  namespace: ""
